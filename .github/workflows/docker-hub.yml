name: Docker Hub

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest tag and generate new version
        id: version
        run: |
          # Find the latest tag following v*.*.* pattern
          LATEST_TAG=$(git tag -l "v*.*.*" | sort -V | tail -n1)
          
          if [ -z "$LATEST_TAG" ]; then
            # If no tags exist, start with v1.0.0
            NEW_TAG="v1.0.0"
          else
            # Extract version numbers
            VERSION_PART=$(echo $LATEST_TAG | sed 's/v//')
            MAJOR=$(echo $VERSION_PART | cut -d. -f1)
            MINOR=$(echo $VERSION_PART | cut -d. -f2)
            PATCH=$(echo $VERSION_PART | cut -d. -f3)
            
            # Increment patch version
            NEW_PATCH=$((PATCH + 1))
            NEW_TAG="v${MAJOR}.${MINOR}.${NEW_PATCH}"
          fi
          
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT
          echo "Latest tag: $LATEST_TAG"
          echo "New tag: $NEW_TAG"

      - name: Create and push new tag
        if: github.event_name != 'pull_request'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag ${{ steps.version.outputs.new_tag }}
          git push origin ${{ steps.version.outputs.new_tag }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/discord-rss-bot:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/discord-rss-bot:${{ steps.version.outputs.new_tag }}
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ steps.version.outputs.new_tag }}
          labels: |
            org.opencontainers.image.title=Discord RSS Bot
            org.opencontainers.image.description=Bot to monitor RSS feeds and post to Discord
            org.opencontainers.image.version=${{ steps.version.outputs.new_tag }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=${{ github.repositoryUrl }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
